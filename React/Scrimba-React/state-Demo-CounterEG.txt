import React from "react"

export default function App() {
    /**
     * Challenge: Set up state to track our count (initial value is 0)
     */
    
    const [counter,setCounter] = React.useState(0);
    console.log(setCounter)
    function  handleCounterInc()
    {
        setCounter(counter+1)
    }
    
     function  handleCounterDec()
    {
        if(counter>0)
        setCounter(counter-1)
        else{
            setCounter(0)
        }
    }
    // handleCounter
    
    return (
        <div className="counter">
            <button className="counter--minus" onClick={handleCounterDec}>â€“</button>
            <div className="counter--count">
                <h1>{counter}</h1>
            </div>
            <button className="counter--plus" onClick={handleCounterInc}>+</button>
        </div>
    )
}

//best practices
import React from "react"

export default function App() {
    const [count, setCount] = React.useState(0)
    /**
     * Note: if you ever need the old value of state
     * to help you determine the new value of state,
     * you should pass a callback function to your
     * state setter function instead of using
     * state directly. This callback function will
     * receive the old value of state as its parameter,
     * which you can then use to determine your new
     * value of state.
     */
    function add() {
        setCount(prevCount => prevCount + 1)
    }
    // Challenge: update `substract` to use a callback function
    
    function subtract() {
        setCount(prevValue => prevValue-1)
    }
    
    return (
        <div className="counter">
            <button className="counter--minus" onClick={subtract}>â€“</button>
            <div className="counter--count">
                <h1>{count}</h1>
            </div>
            <button className="counter--plus" onClick={add}>+</button>
        </div>
    )
}

